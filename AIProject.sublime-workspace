{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"get_",
				"get_coords"
			],
			[
				"is",
				"isHumanP2"
			],
			[
				"isH",
				"isHumanP1"
			],
			[
				"Chess",
				"ChessBoard"
			],
			[
				"My",
				"myGameHandler"
			],
			[
				"remo",
				"removePiece"
			],
			[
				"print",
				"print_available_moves"
			],
			[
				"mak",
				"make_pair"
			],
			[
				"castl",
				"castle_row"
			],
			[
				"opp",
				"opposing_pieces"
			],
			[
				"PieceL",
				"PieceListWhite"
			],
			[
				"make",
				"makeMove"
			],
			[
				"run",
				"runtime_error"
			],
			[
				"re",
				"runtime_error"
			],
			[
				"team",
				"team"
			],
			[
				"chce",
				"check_integrity"
			],
			[
				"Piece",
				"PieceListBlack"
			],
			[
				"check",
				"check_integrity"
			],
			[
				"to",
				"to_string"
			],
			[
				"col",
				"col_in_bounds"
			],
			[
				"cur",
				"current_team"
			],
			[
				"next",
				"nextboard"
			],
			[
				"prin",
				"print_available_moves"
			],
			[
				"to_",
				"to_row"
			],
			[
				"from",
				"from_col"
			],
			[
				"newPi",
				"newPieceListBlack"
			],
			[
				"generate",
				"generate_moves"
			],
			[
				"get",
				"get_player_piece"
			],
			[
				"new",
				"new_board_state"
			],
			[
				"new_",
				"new_pieceArray"
			],
			[
				"has",
				"has_moved"
			],
			[
				"int",
				"int"
			],
			[
				"gener",
				"generate_moves"
			],
			[
				"filter",
				"filter_function"
			],
			[
				"bord",
				"board_state"
			],
			[
				"piece",
				"PieceListBlack"
			],
			[
				"ne",
				"new_pieceArray"
			],
			[
				"BO",
				"BOARD_LENGTH"
			],
			[
				"curr",
				"current_piece_list"
			],
			[
				"current",
				"current_team"
			],
			[
				"are",
				"areFree"
			],
			[
				"cast",
				"castle_row"
			],
			[
				"BORD",
				"BORDER_DEPTH"
			],
			[
				"genera",
				"generate_valid_moves"
			],
			[
				"valid",
				"valid_moves"
			],
			[
				"curre",
				"current_team"
			],
			[
				"PieceList",
				"PieceListBlack"
			],
			[
				"er",
				"EraseFun"
			],
			[
				"b",
				"b"
			],
			[
				"H",
				"H"
			],
			[
				"PLAY",
				"CHESS_PLAY_LENGTH"
			],
			[
				"board",
				"board_state"
			],
			[
				"boar",
				"board_state"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/header/chess_board.h",
			"settings":
			{
				"buffer_size": 2530,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 1418,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/piece.cpp",
			"settings":
			{
				"buffer_size": 5402,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/header/piece.h",
			"settings":
			{
				"buffer_size": 1401,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/AIProj.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/AIProj.sublime-build",
					""
				]
			],
			[
				"Packages/User/AIProj.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/AIProj.sublime-build",
					""
				]
			],
			[
				"Packages/User/AIProj.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 117.0,
		"last_filter": "push",
		"selected_items":
		[
			[
				"push",
				"Git: Push"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add..."
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"command",
				"Git: Custom Command"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"git",
				"Git: Status"
			],
			[
				"git ",
				"Git: Custom Command"
			],
			[
				"git c",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"gitadd",
				"Git: Diff Staged Files"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Disable Package"
			],
			[
				"",
				"Package Control: Enable Package"
			],
			[
				"package",
				"Package Control: Add Repository"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/akul/Documents/HKU/AI/Project",
		"/home/akul/Documents/HKU/AI/Project/src",
		"/home/akul/Documents/HKU/AI/Project/src/header"
	],
	"file_history":
	[
		"/home/akul/Documents/HKU/AI/Project/valgrind.log",
		"/home/akul/Documents/HKU/AI/Project/src/header/game_handler.h",
		"/home/akul/Documents/HKU/AI/Project/src/game_handler.cpp",
		"/home/akul/Documents/HKU/AI/Project/src/human_player.cpp",
		"/home/akul/Documents/HKU/AI/Project/src/piece.cpp",
		"/home/akul/Documents/HKU/AI/Project/src/header/human_player.h",
		"/home/akul/Documents/HKU/AI/Project/src/header/player.h",
		"/home/akul/Documents/HKU/AI/Project/Makefile",
		"/home/akul/Documents/HKU/AI/Project/src/header/piece.h",
		"/home/akul/Documents/HKU/AI/Project/.gitignore",
		"/home/akul/Documents/HKU/AI/Project/README.md",
		"/home/akul/Documents/HKU/AI/Project/src/main.cpp",
		"/home/akul/Documents/HKU/AI/Project/AIProject.sublime-project",
		"/home/akul/Documents/HKU/AI/Project/src/chess_board.cpp",
		"/home/akul/Documents/HKU/AI/Project/AIProject",
		"/home/akul/Documents/HKU/AI/Project/src/header/pieces.h",
		"/home/akul/Documents/HKU/AI/Project/AIProj.sublime-build",
		"/home/akul/.config/sublime-text-3/Packages/User/AIProj.sublime-build",
		"/home/akul/Documents/HKU/AI/HW2/BruteForceP1.py",
		"/home/akul/Documents/HKU/AI/HW2/test.key"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"generate_valid",
			"Invalid",
			"invalid",
			"generate_valid_moves",
			"new",
			"remove",
			"delete",
			"check_in",
			"CASTLE",
			"check_integrity",
			"team",
			"newPiece",
			"itoa",
			"generate_moves",
			"print_",
			"filter",
			"makeMove",
			"make_move",
			"generate_piece_moves",
			"generate_piece",
			"generate_valid_moves",
			"ADD_MOVE(valid_moves, ",
			"isInCheck",
			"pragma",
			"generate",
			"EMPTY",
			")\n",
			"col",
			"Col",
			"White",
			"Piece.",
			"BLACK",
			"WHITE",
			"row",
			"}\n",
			"WHITE",
			"White"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"move_factor",
			"std::to_string",
			"add_move(",
			"NONE",
			"Black",
			"Piece::",
			"Piece.BLACK",
			"Piece.WHITE",
			"col",
			"BLACK",
			"Black",
			"// White Pawns:\n	for (int i = 0; i < CHESS_PLAY_LENGTH; i++) {\n		board_state[B][i+BORDER_DEPTH] = WHITE_PAWN;\n	}\n\n	//White Rooks\n	board_state[A][BORDER_DEPTH] = WHITE_ROOK;\n	board_state[A][BORDER_DEPTH+CHESS_PLAY_LENGTH-1] = WHITE_ROOK;\n\n	//White Knights\n	board_state[A][BORDER_DEPTH+1] = WHITE_KNIGHT;\n	board_state[A][BORDER_DEPTH+CHESS_PLAY_LENGTH-2] = WHITE_KNIGHT;\n\n	//White Bishops\n	board_state[A][BORDER_DEPTH+2] = WHITE_BISHOP;\n	board_state[A][BORDER_DEPTH+CHESS_PLAY_LENGTH-3] = WHITE_BISHOP;\n\n	//White King\n	board_state[A][BORDER_DEPTH+3] = WHITE_KING;\n	//White Queen\n	board_state[A][BORDER_DEPTH+CHESS_PLAY_LENGTH-4] = WHITE_QUEEN;"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/header/chess_board.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2530,
						"regions":
						{
						},
						"selection":
						[
							[
								2018,
								2018
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1140.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418,
						"regions":
						{
						},
						"selection":
						[
							[
								355,
								355
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/piece.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5402,
						"regions":
						{
						},
						"selection":
						[
							[
								1180,
								1180
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 618.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/header/piece.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1401,
						"regions":
						{
						},
						"selection":
						[
							[
								1120,
								1120
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 810.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 202.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 112.0
	},
	"pinned_build_system": "Build Debug and Run",
	"project": "AIProject.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
